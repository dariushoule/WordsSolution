Dariuss-MBP:WordsSolution dariushoule$ python -m line_profiler words_solution.py.lprof 
Timer unit: 1e-06 s

Total time: 0.000189 s
File: classes/UniqueSequenceGenerator.py
Function: __init__ at line 13

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    13                                               @profile
    14                                               def __init__(self, sequence_length):
    15         1            1      1.0      0.5          if sequence_length <= 0:
    16                                                       raise IndexError
    17                                           
    18         1            0      0.0      0.0          self.sequence_length = sequence_length
    19         1            0      0.0      0.0          self.sequence_map = {}
    20         1          188    188.0     99.5          self.not_alnum_regex = re.compile('[\W_]+')

Total time: 3.71002 s
File: classes/UniqueSequenceGenerator.py
Function: add_word at line 29

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    29                                               @profile
    30                                               def add_word(self, word):
    31    235886       428426      1.8     11.5          word = self.not_alnum_regex.sub('', word.lower())
    32                                           
    33   1785713       833833      0.5     22.5          for i in range(0, len(word) - self.sequence_length + 1):
    34   1549827       786032      0.5     21.2              seq = word[i:i+self.sequence_length]
    35                                           
    36   1549827       776044      0.5     20.9              if seq in self.sequence_map:
    37   1492512       842308      0.6     22.7                  self.sequence_map[seq]["unique"] = False
    38                                                       else:
    39     57315        43378      0.8      1.2                  self.sequence_map[seq] = {"word": word, "unique": True}

Total time: 0.023077 s
File: classes/UniqueSequenceGenerator.py
Function: get_sequences_and_words at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                               @profile
    47                                               def get_sequences_and_words(self):
    48         1        23077  23077.0    100.0          return {k: v["word"] for k, v in self.sequence_map.iteritems() if v["unique"]}